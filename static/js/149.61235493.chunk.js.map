{"version":3,"file":"static/js/149.61235493.chunk.js","mappings":"sPAEaA,EAAQC,EAAAA,GAAAA,GAAH,gDAILC,EAASD,EAAAA,GAAAA,EAAH,gD,SCyBnB,EA1BoB,WAClB,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBN,GAASO,MAAK,SAAAJ,GAC1BA,EAAQK,OAAS,GACnBJ,EAAWD,QAGd,CAACH,KAGF,8BACGG,GACCA,EAAQM,KAAI,SAAAC,GAAM,OAChB,yBACE,2BACE,UAACb,EAAD,sBAAgBa,EAAOC,WACvB,SAACZ,EAAD,UAASW,EAAOE,cAHXF,EAAOG,W,0MCnB1BC,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA4CC,EAA5C,+BAAkD,GAAlD,SACyBH,IAAAA,IAAUG,GADnC,cACQC,EADR,OAEQC,EAAOD,EAASC,KAAKC,QAF7B,kBAGSD,GAHT,mEAMO,SAASE,IACd,OAAOL,EAA6B,+BAAD,OAAgCD,IAG9D,SAASO,EAAkBC,GAChC,OAAOP,EAA6B,yBAAD,OACRD,EADQ,kBACKQ,IAInC,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BxB,GAA9B,uFACcc,IAAAA,IAAA,iBAAoBd,EAApB,oBAAuCe,IADrD,cACCU,EADD,yBAEEA,EAAKN,MAFP,kEAKA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAgC1B,GAAhC,yFACkBc,IAAAA,IAAA,gBAAmBd,EAAnB,4BAA8Ce,IADhE,cACCG,EADD,OAECS,EAAST,EAASC,KAAKS,KAFxB,kBAGED,GAHF,kEAMA,SAAerB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCN,GAAjC,yFACkBc,IAAAA,IAAA,gBAAmBd,EAAnB,4BAA8Ce,IADhE,cACCG,EADD,OAECW,EAAWX,EAASC,KAAKC,QAF1B,kBAGES,GAHF","sources":["components/pages/ReviewsPageStyled.jsx","components/pages/ReviewsPage.jsx","services/fetchMovies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const Review = styled.p`\n  margin-bottom: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/fetchMovies';\nimport { Title, Review } from './ReviewsPageStyled';\n\nconst ReviewsInfo = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(reviews => {\n      if (reviews.length > 0) {\n        setReviews(reviews);\n      }\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews &&\n        reviews.map(review => (\n          <ul key={review.id}>\n            <li>\n              <Title>Author: {review.author}</Title>\n              <Review>{review.content}</Review>\n            </li>\n          </ul>\n        ))}\n    </>\n  );\n};\nexport default ReviewsInfo;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '3f98aefed4f412e17fc5cbf8a78c872a';\n\nasync function fetchMoviesWithErrorHandling(url = '') {\n  const response = await axios.get(url);\n  const data = response.data.results;\n  return data;\n}\n\nexport function fetchTrendingMovies() {\n  return fetchMoviesWithErrorHandling(`/trending/movie/day?api_key=${KEY}`);\n}\n\nexport function fetchMovieByQuery(searchQuery) {\n  return fetchMoviesWithErrorHandling(\n    `/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n}\n\nexport async function fetchMovieById(movieId) {\n  const item = await axios.get(`/movie/${movieId}?api_key=${KEY}`);\n  return item.data;\n}\n\nexport async function fetchMovieActors(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  const actors = response.data.cast;\n  return actors;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  const reviewes = response.data.results;\n  return reviewes;\n}\n"],"names":["Title","styled","Review","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","then","length","map","review","author","content","id","axios","KEY","fetchMoviesWithErrorHandling","url","response","data","results","fetchTrendingMovies","fetchMovieByQuery","searchQuery","fetchMovieById","item","fetchMovieActors","actors","cast","reviewes"],"sourceRoot":""}