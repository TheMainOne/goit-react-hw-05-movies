{"version":3,"file":"static/js/575.d4cd2430.chunk.js","mappings":"mMA4BA,UAxBmB,WACjB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBN,GAASO,MAAK,SAAAJ,GAAM,OAAIC,EAAUD,QAClD,CAACH,KAGF,8BACGG,GACCA,EAAOK,KAAI,SAAAC,GAAK,OACd,gCACE,gBACEC,IAAG,yCAAoCD,EAAME,cAC7CC,IAAI,MAEN,uBAAIH,EAAMI,iBACV,uBAAIJ,EAAMK,cANEL,EAAMM,W,0MCd9BC,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA4CC,EAA5C,+BAAkD,GAAlD,SACyBH,IAAAA,IAAUG,GADnC,cACQC,EADR,OAEQC,EAAOD,EAASC,KAAKC,QAF7B,kBAGSD,GAHT,mEAMO,SAASE,IACd,OAAOL,EAA6B,+BAAD,OAAgCD,IAG9D,SAASO,EAAkBC,GAChC,OAAOP,EAA6B,yBAAD,OACRD,EADQ,kBACKQ,IAInC,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8B1B,GAA9B,uFACcgB,IAAAA,IAAA,iBAAoBhB,EAApB,oBAAuCiB,IADrD,cACCU,EADD,yBAEEA,EAAKN,MAFP,kEAKA,SAAef,EAAtB,+CAAO,OAAP,oBAAO,WAAgCN,GAAhC,yFACkBgB,IAAAA,IAAA,gBAAmBhB,EAAnB,4BAA8CiB,IADhE,cACCG,EADD,OAECjB,EAASiB,EAASC,KAAKO,KAFxB,kBAGEzB,GAHF,kEAMA,SAAe0B,EAAtB,+CAAO,OAAP,oBAAO,WAAiC7B,GAAjC,yFACkBgB,IAAAA,IAAA,gBAAmBhB,EAAnB,4BAA8CiB,IADhE,cACCG,EADD,OAECU,EAAWV,EAASC,KAAKC,QAF1B,kBAGEQ,GAHF","sources":["components/pages/ActorsPage.jsx","services/fetchMovies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieActors } from 'services/fetchMovies';\n\nconst ActorsInfo = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState(null);\n\n  useEffect(() => {\n    fetchMovieActors(movieId).then(actors => setActors(actors));\n  }, [movieId]);\n\n  return (\n    <>\n      {actors &&\n        actors.map(actor => (\n          <article key={actor.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w342${actor.profile_path}`}\n              alt=\"\"\n            />\n            <p>{actor.original_name}</p>\n            <p>{actor.character}</p>\n          </article>\n        ))}\n    </>\n  );\n};\nexport default ActorsInfo;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '3f98aefed4f412e17fc5cbf8a78c872a';\n\nasync function fetchMoviesWithErrorHandling(url = '') {\n  const response = await axios.get(url);\n  const data = response.data.results;\n  return data;\n}\n\nexport function fetchTrendingMovies() {\n  return fetchMoviesWithErrorHandling(`/trending/movie/day?api_key=${KEY}`);\n}\n\nexport function fetchMovieByQuery(searchQuery) {\n  return fetchMoviesWithErrorHandling(\n    `/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n}\n\nexport async function fetchMovieById(movieId) {\n  const item = await axios.get(`/movie/${movieId}?api_key=${KEY}`);\n  return item.data;\n}\n\nexport async function fetchMovieActors(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  const actors = response.data.cast;\n  return actors;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  const reviewes = response.data.results;\n  return reviewes;\n}\n"],"names":["movieId","useParams","useState","actors","setActors","useEffect","fetchMovieActors","then","map","actor","src","profile_path","alt","original_name","character","id","axios","KEY","fetchMoviesWithErrorHandling","url","response","data","results","fetchTrendingMovies","fetchMovieByQuery","searchQuery","fetchMovieById","item","cast","fetchMovieReviews","reviewes"],"sourceRoot":""}