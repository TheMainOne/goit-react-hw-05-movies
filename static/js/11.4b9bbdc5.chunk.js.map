{"version":3,"file":"static/js/11.4b9bbdc5.chunk.js","mappings":"sPAEaA,EAAQC,EAAAA,GAAAA,GAAH,uFAMLC,EAAWD,EAAAA,GAAAA,GAAH,uG,SCgCrB,EAnCiB,WACf,OAA4CE,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,GACX,KACEI,EAAAA,EAAAA,MAAsBC,MAAK,SAAAC,GAAM,OAAIR,EAAkBQ,MACvD,MAAOL,GACPC,EAASD,GAHX,QAKED,GAAW,MAEZ,KAGD,+BACE,6BACE,SAACP,EAAD,8BACA,0BACGM,IAAW,sCACXF,GACCA,EAAeU,KAAI,SAAAC,GAAK,OACtB,SAACb,EAAD,WACE,SAAC,KAAD,CAAMc,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,kBAD3BH,EAAME,OAIxBT,IAAS,kE,0MC/BpBW,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA4CC,EAA5C,+BAAkD,GAAlD,SACyBH,IAAAA,IAAUG,GADnC,cACQC,EADR,OAEQC,EAAOD,EAASC,KAAKC,QAF7B,kBAGSD,GAHT,mEAMO,SAASb,IACd,OAAOU,EAA6B,+BAAD,OAAgCD,IAG9D,SAASM,EAAkBC,GAChC,OAAON,EAA6B,yBAAD,OACRD,EADQ,kBACKO,IAInC,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACcV,IAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,IADrD,cACCU,EADD,yBAEEA,EAAKN,MAFP,kEAKA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,yFACkBV,IAAAA,IAAA,gBAAmBU,EAAnB,4BAA8CT,IADhE,cACCG,EADD,OAECS,EAAST,EAASC,KAAKS,KAFxB,kBAGED,GAHF,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAiCL,GAAjC,yFACkBV,IAAAA,IAAA,gBAAmBU,EAAnB,4BAA8CT,IADhE,cACCG,EADD,OAECY,EAAWZ,EAASC,KAAKC,QAF1B,kBAGEU,GAHF","sources":["components/HomePage/HomePage.styled.jsx","components/HomePage/HomePage.jsx","services/fetchMovies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin-bottom: 15px;\n  font-size: 26px;\n  color: #545454;\n`;\n\nexport const ListItem = styled.li`\n  padding: 5px;\n\n  &:nth-child(even) {\n    background-color: #d6d6d6;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchTrendingMovies } from 'services/fetchMovies';\nimport { Title, ListItem } from './HomePage.styled';\n\nconst HomePage = () => {\n  const [trendingMovies, setTrendingMovies] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    try {\n      fetchTrendingMovies().then(movies => setTrendingMovies(movies));\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  return (\n    <>\n      <main>\n        <Title>Trending today</Title>\n        <ul>\n          {loading && <p>Loading...</p>}\n          {trendingMovies &&\n            trendingMovies.map(movie => (\n              <ListItem key={movie.id}>\n                <Link to={`/movies/${movie.id}`}>{movie.original_title}</Link>\n              </ListItem>\n            ))}\n          {error && <h2>Error. Something went wrong</h2>}\n        </ul>\n      </main>\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '3f98aefed4f412e17fc5cbf8a78c872a';\n\nasync function fetchMoviesWithErrorHandling(url = '') {\n  const response = await axios.get(url);\n  const data = response.data.results;\n  return data;\n}\n\nexport function fetchTrendingMovies() {\n  return fetchMoviesWithErrorHandling(`/trending/movie/day?api_key=${KEY}`);\n}\n\nexport function fetchMovieByQuery(searchQuery) {\n  return fetchMoviesWithErrorHandling(\n    `/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n}\n\nexport async function fetchMovieById(movieId) {\n  const item = await axios.get(`/movie/${movieId}?api_key=${KEY}`);\n  return item.data;\n}\n\nexport async function fetchMovieActors(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  const actors = response.data.cast;\n  return actors;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  const reviewes = response.data.results;\n  return reviewes;\n}\n"],"names":["Title","styled","ListItem","useState","trendingMovies","setTrendingMovies","loading","setLoading","error","setError","useEffect","fetchTrendingMovies","then","movies","map","movie","to","id","original_title","axios","KEY","fetchMoviesWithErrorHandling","url","response","data","results","fetchMovieByQuery","searchQuery","fetchMovieById","movieId","item","fetchMovieActors","actors","cast","fetchMovieReviews","reviewes"],"sourceRoot":""}