{"version":3,"file":"static/js/860.c8faf887.chunk.js","mappings":"wPAEaA,EAAUC,EAAAA,GAAAA,GAAH,4GAOPC,EAAcD,EAAAA,GAAAA,GAAH,2GAMXE,EAAOF,EAAAA,GAAAA,EAAH,yC,mBCoBjB,EA7BmB,WACjB,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBN,GAASO,MAAK,SAAAJ,GAAM,OAAIC,EAAUD,QAClD,CAACH,KAGF,SAACJ,EAAD,UACGO,GACCA,EAAOK,KAAI,SAAAC,GAAK,OACd,UAACX,EAAD,WACGW,EAAMC,cACL,gBACEC,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAI,MAGN,gBAAKD,IAAKE,EAAUD,IAAI,GAAGE,MAAO,IAAKC,OAAQ,OAGjD,SAAChB,EAAD,UAAOU,EAAMO,iBACb,SAACjB,EAAD,UAAOU,EAAMQ,cAXGR,EAAMS,W,0MChBlCC,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA4CC,EAA5C,+BAAkD,GAAlD,SACyBH,IAAAA,IAAUG,GADnC,cACQC,EADR,OAEQC,EAAOD,EAASC,KAAKC,QAF7B,kBAGSD,GAHT,mEAMO,SAASE,IACd,OAAOL,EAA6B,+BAAD,OAAgCD,IAG9D,SAASO,EAAkBC,GAChC,OAAOP,EAA6B,yBAAD,OACRD,EADQ,kBACKQ,IAInC,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8B7B,GAA9B,uFACcmB,IAAAA,IAAA,iBAAoBnB,EAApB,oBAAuCoB,IADrD,cACCU,EADD,yBAEEA,EAAKN,MAFP,kEAKA,SAAelB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCN,GAAhC,yFACkBmB,IAAAA,IAAA,gBAAmBnB,EAAnB,4BAA8CoB,IADhE,cACCG,EADD,OAECpB,EAASoB,EAASC,KAAKO,KAFxB,kBAGE5B,GAHF,kEAMA,SAAe6B,EAAtB,+CAAO,OAAP,oBAAO,WAAiChC,GAAjC,yFACkBmB,IAAAA,IAAA,gBAAmBnB,EAAnB,4BAA8CoB,IADhE,cACCG,EADD,OAECU,EAAWV,EAASC,KAAKC,QAF1B,kBAGEQ,GAHF,oE","sources":["components/pages/ActorsPageStyled.jsx","components/pages/ActorsPage.jsx","services/fetchMovies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Gallery = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: -15px;\n  margin-top: -15px;\n`;\n\nexport const GalleryItem = styled.li`\n  flex-basis: calc(33.33333% - 15px);\n  margin-right: 15px;\n  margin-top: 15px;\n`;\n\nexport const Text = styled.p`\n  padding: 5px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieActors } from 'services/fetchMovies';\nimport { Gallery, GalleryItem, Text } from './ActorsPageStyled';\nimport NotFound from '../../images/NotFound.jpg';\n\nconst ActorsInfo = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState(null);\n\n  useEffect(() => {\n    fetchMovieActors(movieId).then(actors => setActors(actors));\n  }, [movieId]);\n\n  return (\n    <Gallery>\n      {actors &&\n        actors.map(actor => (\n          <GalleryItem key={actor.id}>\n            {actor.profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w342${actor.profile_path}`}\n                alt=\"\"\n              />\n            ) : (\n              <img src={NotFound} alt=\"\" width={342} height={513} />\n            )}\n\n            <Text>{actor.original_name}</Text>\n            <Text>{actor.character}</Text>\n          </GalleryItem>\n        ))}\n    </Gallery>\n  );\n};\nexport default ActorsInfo;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '3f98aefed4f412e17fc5cbf8a78c872a';\n\nasync function fetchMoviesWithErrorHandling(url = '') {\n  const response = await axios.get(url);\n  const data = response.data.results;\n  return data;\n}\n\nexport function fetchTrendingMovies() {\n  return fetchMoviesWithErrorHandling(`/trending/movie/day?api_key=${KEY}`);\n}\n\nexport function fetchMovieByQuery(searchQuery) {\n  return fetchMoviesWithErrorHandling(\n    `/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n}\n\nexport async function fetchMovieById(movieId) {\n  const item = await axios.get(`/movie/${movieId}?api_key=${KEY}`);\n  return item.data;\n}\n\nexport async function fetchMovieActors(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  const actors = response.data.cast;\n  return actors;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  const reviewes = response.data.results;\n  return reviewes;\n}\n"],"names":["Gallery","styled","GalleryItem","Text","movieId","useParams","useState","actors","setActors","useEffect","fetchMovieActors","then","map","actor","profile_path","src","alt","NotFound","width","height","original_name","character","id","axios","KEY","fetchMoviesWithErrorHandling","url","response","data","results","fetchTrendingMovies","fetchMovieByQuery","searchQuery","fetchMovieById","item","cast","fetchMovieReviews","reviewes"],"sourceRoot":""}