{"version":3,"file":"static/js/904.38761a91.chunk.js","mappings":"4OAMMA,EAAUC,EAAAA,GAAAA,QAAH,0CAqDb,UAjDiB,WACf,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeV,GACZW,MAAK,SAAAR,GACJC,EAAQD,GACRK,EAAUL,EAAKI,WAEhBK,OAAM,SAAAP,GACLC,EAASD,GACTQ,EAAAA,GAAAA,MAAY,kCAEf,CAACb,KAGF,iCACE,4BACE,SAAC,KAAD,CAAMc,GAAG,IAAT,qBACCT,IAAS,wEACTF,IACC,UAACL,EAAD,YACE,gBACEiB,IAAG,yCAAoCZ,EAAKa,aAC5CC,IAAKd,EAAKe,kBAEZ,4BACE,wBAAKf,EAAKgB,SACV,wCAAgBhB,EAAKiB,iBACrB,sCACA,uBAAIjB,EAAKkB,YACT,oCACA,uBAAId,EAAOe,KAAI,SAAAC,GAAG,OAAIA,EAAIC,QAAMC,KAAK,iBAK7C,oDACA,SAAC,KAAD,CAASX,GAAE,kBAAad,EAAb,SAAX,mBACA,SAAC,KAAD,CAASc,GAAE,kBAAad,EAAb,YAAX,sBAEA,SAAC,KAAD,S,0MCpDN0B,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA4CC,EAA5C,+BAAkD,GAAlD,SACyBH,IAAAA,IAAUG,GADnC,cACQC,EADR,OAEQC,EAAOD,EAASC,KAAKC,QAF7B,kBAGSD,GAHT,mEAMO,SAASE,IACd,OAAOL,EAA6B,+BAAD,OAAgCD,IAG9D,SAASO,EAAkBC,GAChC,OAAOP,EAA6B,yBAAD,OACRD,EADQ,kBACKQ,IAInC,SAAezB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BV,GAA9B,uFACc0B,IAAAA,IAAA,iBAAoB1B,EAApB,oBAAuC2B,IADrD,cACCxB,EADD,yBAEEA,EAAK4B,MAFP,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCpC,GAAhC,yFACkB0B,IAAAA,IAAA,gBAAmB1B,EAAnB,4BAA8C2B,IADhE,cACCG,EADD,OAECO,EAASP,EAASC,KAAKO,KAFxB,kBAGED,GAHF,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAiCvC,GAAjC,yFACkB0B,IAAAA,IAAA,gBAAmB1B,EAAnB,4BAA8C2B,IADhE,cACCG,EADD,OAECU,EAAWV,EAASC,KAAKC,QAF1B,kBAGEQ,GAHF","sources":["components/pages/MovieDetailsPage.jsx","services/fetchMovies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { useParams, Link, NavLink, Outlet } from 'react-router-dom';\nimport { fetchMovieById } from 'services/fetchMovies';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.article`\n  display: flex;\n`;\n\nconst ItemPage = () => {\n  const { movieId } = useParams();\n  const [item, setItem] = useState(null);\n  const [error, setError] = useState(false);\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    fetchMovieById(movieId)\n      .then(item => {\n        setItem(item);\n        setGenres(item.genres);\n      })\n      .catch(error => {\n        setError(error);\n        toast.error('Sorry. Movie is not found');\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      <div>\n        <Link to=\"/\">Go back</Link>\n        {error && <p>Something went wrong. Please try again later</p>}\n        {item && (\n          <Wrapper>\n            <img\n              src={`https://image.tmdb.org/t/p/w342${item.poster_path}`}\n              alt={item.original_title}\n            />\n            <div>\n              <h2>{item.title}</h2>\n              <p>User score: {item.vote_average}</p>\n              <h3>Overview</h3>\n              <p>{item.overview}</p>\n              <h4>Genres</h4>\n              <p>{genres.map(gen => gen.name).join(' ')}</p>\n            </div>\n          </Wrapper>\n        )}\n      </div>\n      <h5>Additional information</h5>\n      <NavLink to={`/movies/${movieId}/cast`}>Cast</NavLink>\n      <NavLink to={`/movies/${movieId}/reviews`}>Reviews</NavLink>\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default ItemPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '3f98aefed4f412e17fc5cbf8a78c872a';\n\nasync function fetchMoviesWithErrorHandling(url = '') {\n  const response = await axios.get(url);\n  const data = response.data.results;\n  return data;\n}\n\nexport function fetchTrendingMovies() {\n  return fetchMoviesWithErrorHandling(`/trending/movie/day?api_key=${KEY}`);\n}\n\nexport function fetchMovieByQuery(searchQuery) {\n  return fetchMoviesWithErrorHandling(\n    `/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n}\n\nexport async function fetchMovieById(movieId) {\n  const item = await axios.get(`/movie/${movieId}?api_key=${KEY}`);\n  return item.data;\n}\n\nexport async function fetchMovieActors(movieId) {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  const actors = response.data.cast;\n  return actors;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  const reviewes = response.data.results;\n  return reviewes;\n}\n"],"names":["Wrapper","styled","movieId","useParams","useState","item","setItem","error","setError","genres","setGenres","useEffect","fetchMovieById","then","catch","toast","to","src","poster_path","alt","original_title","title","vote_average","overview","map","gen","name","join","axios","KEY","fetchMoviesWithErrorHandling","url","response","data","results","fetchTrendingMovies","fetchMovieByQuery","searchQuery","fetchMovieActors","actors","cast","fetchMovieReviews","reviewes"],"sourceRoot":""}